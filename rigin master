[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 0711527..fd15b31 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,3 +1,43 @@[m
[32m+[m[32m<<<<<<< HEAD[m
[32m+[m[32mtarget/[m
[32m+[m[32m!.mvn/wrapper/maven-wrapper.jar[m
[32m+[m[32m!**/src/main/**/target/[m
[32m+[m[32m!**/src/test/**/target/[m
[32m+[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32m.idea/modules.xml[m
[32m+[m[32m.idea/jarRepositories.xml[m
[32m+[m[32m.idea/compiler.xml[m
[32m+[m[32m.idea/libraries/[m
[32m+[m[32m*.iws[m
[32m+[m[32m*.iml[m
[32m+[m[32m*.ipr[m
[32m+[m
[32m+[m[32m### Eclipse ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m[32mbuild/[m
[32m+[m[32m!**/src/main/**/build/[m
[32m+[m[32m!**/src/test/**/build/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[32m+[m
[32m+[m[32m### Mac OS ###[m
[32m+[m[32m.DS_Store[m
[32m+[m[32m=======[m
 # See http://help.github.com/ignore-files/ for more about ignoring files.[m
 [m
 # Compiled output[m
[36m@@ -40,3 +80,4 @@[m [mtestem.log[m
 # System files[m
 .DS_Store[m
 Thumbs.db[m
[32m+[m[32m>>>>>>> d27fa40ea1905507c393c602eddfe480a48cf295[m
[1mdiff --git a/.idea/.gitignore b/.idea/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..13566b8[m
[1m--- /dev/null[m
[1m+++ b/.idea/.gitignore[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m# Default ignored files[m
[32m+[m[32m/shelf/[m
[32m+[m[32m/workspace.xml[m
[32m+[m[32m# Editor-based HTTP Client requests[m
[32m+[m[32m/httpRequests/[m
[32m+[m[32m# Datasource local storage ignored files[m
[32m+[m[32m/dataSources/[m
[32m+[m[32m/dataSources.local.xml[m
[1mdiff --git a/.idea/encodings.xml b/.idea/encodings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..7de0c2b[m
[1m--- /dev/null[m
[1m+++ b/.idea/encodings.xml[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="Encoding">[m
[32m+[m[32m    <file url="file://$PROJECT_DIR$/inventory-service/src/main/java" charset="UTF-8" />[m
[32m+[m[32m    <file url="file://$PROJECT_DIR$/order-service/src/main/java" charset="UTF-8" />[m
[32m+[m[32m    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />[m
[32m+[m[32m    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..86b0874[m
[1m--- /dev/null[m
[1m+++ b/.idea/misc.xml[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="ExternalStorageConfigurationManager" enabled="true" />[m
[32m+[m[32m  <component name="MavenProjectsManager">[m
[32m+[m[32m    <option name="originalFiles">[m
[32m+[m[32m      <list>[m
[32m+[m[32m        <option value="$PROJECT_DIR$/pom.xml" />[m
[32m+[m[32m        <option value="$PROJECT_DIR$/inventory-service/pom.xml" />[m
[32m+[m[32m        <option value="$PROJECT_DIR$/order-service/pom.xml" />[m
[32m+[m[32m      </list>[m
[32m+[m[32m    </option>[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">[m
[32m+[m[32m    <output url="file://$PROJECT_DIR$/out" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/vcs.xml b/.idea/vcs.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..dfd54bc[m
[1m--- /dev/null[m
[1m+++ b/.idea/vcs.xml[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="VcsDirectoryMappings">[m
[32m+[m[32m    <mapping directory="$PROJECT_DIR$" vcs="Git" />[m
[32m+[m[32m    <mapping directory="$PROJECT_DIR$/ecom-app-angular" vcs="Git" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/ecom-app-angular b/ecom-app-angular[m
[1mnew file mode 160000[m
[1mindex 0000000..5def429[m
[1m--- /dev/null[m
[1m+++ b/ecom-app-angular[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit 5def4290150d711d94b0e1485fed5a5dca3c4691[m
[1mdiff --git a/inventory-service/.gitattributes b/inventory-service/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..3b41682[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/.gitattributes[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m/mvnw text eol=lf[m
[32m+[m[32m*.cmd text eol=crlf[m
[1mdiff --git a/inventory-service/.gitignore b/inventory-service/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..549e00a[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/.gitignore[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mHELP.md[m
[32m+[m[32mtarget/[m
[32m+[m[32m!.mvn/wrapper/maven-wrapper.jar[m
[32m+[m[32m!**/src/main/**/target/[m
[32m+[m[32m!**/src/test/**/target/[m
[32m+[m
[32m+[m[32m### STS ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32m.idea[m
[32m+[m[32m*.iws[m
[32m+[m[32m*.iml[m
[32m+[m[32m*.ipr[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m[32mbuild/[m
[32m+[m[32m!**/src/main/**/build/[m
[32m+[m[32m!**/src/test/**/build/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[1mdiff --git a/inventory-service/.mvn/wrapper/maven-wrapper.properties b/inventory-service/.mvn/wrapper/maven-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..d58dfb7[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/.mvn/wrapper/maven-wrapper.properties[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#   http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32mwrapperVersion=3.3.2[m
[32m+[m[32mdistributionType=only-script[m
[32m+[m[32mdistributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip[m
[1mdiff --git a/inventory-service/mvnw b/inventory-service/mvnw[m
[1mnew file mode 100644[m
[1mindex 0000000..19529dd[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/mvnw[m
[36m@@ -0,0 +1,259 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m#[m
[32m+[m[32m# Optional ENV vars[m
[32m+[m[32m# -----------------[m
[32m+[m[32m#   JAVA_HOME - location of a JDK home dir, required when download maven via java source[m
[32m+[m[32m#   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mset -euf[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != debug ] || set -x[m
[32m+[m
[32m+[m[32m# OS specific support.[m
[32m+[m[32mnative_path() { printf %s\\n "$1"; }[m
[32m+[m[32mcase "$(uname)" in[m
[32m+[m[32mCYGWIN* | MINGW*)[m
[32m+[m[32m  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"[m
[32m+[m[32m  native_path() { cygpath --path --windows "$1"; }[m
[32m+[m[32m  ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# set JAVACMD and JAVACCMD[m
[32m+[m[32mset_java_home() {[m
[32m+[m[32m  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched[m
[32m+[m[32m  if [ -n "${JAVA_HOME-}" ]; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ]; then[m
[32m+[m[32m      # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/jre/sh/javac"[m
[32m+[m[32m    else[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/bin/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/bin/javac"[m
[32m+[m
[32m+[m[32m      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then[m
[32m+[m[32m        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2[m
[32m+[m[32m        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2[m
[32m+[m[32m        return 1[m
[32m+[m[32m      fi[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    JAVACMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v java[m
[32m+[m[32m    )" || :[m
[32m+[m[32m    JAVACCMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v javac[m
[32m+[m[32m    )" || :[m
[32m+[m
[32m+[m[32m    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then[m
[32m+[m[32m      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2[m
[32m+[m[32m      return 1[m
[32m+[m[32m    fi[m
[32m+[m[32m  fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# hash string like Java String::hashCode[m
[32m+[m[32mhash_string() {[m
[32m+[m[32m  str="${1:-}" h=0[m
[32m+[m[32m  while [ -n "$str" ]; do[m
[32m+[m[32m    char="${str%"${str#?}"}"[m
[32m+[m[32m    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))[m
[32m+[m[32m    str="${str#?}"[m
[32m+[m[32m  done[m
[32m+[m[32m  printf %x\\n $h[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mverbose() { :; }[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }[m
[32m+[m
[32m+[m[32mdie() {[m
[32m+[m[32m  printf %s\\n "$1" >&2[m
[32m+[m[32m  exit 1[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtrim() {[m
[32m+[m[32m  # MWRAPPER-139:[m
[32m+[m[32m  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.[m
[32m+[m[32m  #   Needed for removing poorly interpreted newline sequences when running in more[m
[32m+[m[32m  #   exotic environments such as mingw bash on Windows.[m
[32m+[m[32m  printf "%s" "${1}" | tr -d '[:space:]'[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32mwhile IFS="=" read -r key value; do[m
[32m+[m[32m  case "${key-}" in[m
[32m+[m[32m  distributionUrl) distributionUrl=$(trim "${value-}") ;;[m
[32m+[m[32m  distributionSha256Sum) distributionSha256Sum=$(trim "${value-}") ;;[m
[32m+[m[32m  esac[m
[32m+[m[32mdone <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m
[32m+[m[32mcase "${distributionUrl##*/}" in[m
[32m+[m[32mmaven-mvnd-*bin.*)[m
[32m+[m[32m  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/[m
[32m+[m[32m  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in[m
[32m+[m[32m  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;[m
[32m+[m[32m  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;[m
[32m+[m[32m  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;[m
[32m+[m[32m  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;[m
[32m+[m[32m  *)[m
[32m+[m[32m    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2[m
[32m+[m[32m    distributionPlatform=linux-amd64[m
[32m+[m[32m    ;;[m
[32m+[m[32m  esac[m
[32m+[m[32m  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"[m
[32m+[m[32m  ;;[m
[32m+[m[32mmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;[m
[32m+[m[32m*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32m[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"[m
[32m+[m[32mdistributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlName%.*}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlNameMain%-bin}"[m
[32m+[m[32mMAVEN_USER_HOME="${MAVEN_USER_HOME:-${HOME}/.m2}"[m
[32m+[m[32mMAVEN_HOME="${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"[m
[32m+[m
[32m+[m[32mexec_maven() {[m
[32m+[m[32m  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :[m
[32m+[m[32m  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif [ -d "$MAVEN_HOME" ]; then[m
[32m+[m[32m  verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  exec_maven "$@"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mcase "${distributionUrl-}" in[m
[32m+[m[32m*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;[m
[32m+[m[32m*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32mif TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then[m
[32m+[m[32m  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }[m
[32m+[m[32m  trap clean HUP INT TERM EXIT[m
[32m+[m[32melse[m
[32m+[m[32m  die "cannot create temp dir"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mmkdir -p -- "${MAVEN_HOME%/*}"[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mverbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mverbose "Downloading from: $distributionUrl"[m
[32m+[m[32mverbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m# select .zip or .tar.gz[m
[32m+[m[32mif ! command -v unzip >/dev/null; then[m
[32m+[m[32m  distributionUrl="${distributionUrl%.zip}.tar.gz"[m
[32m+[m[32m  distributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# verbose opt[m
[32m+[m[32m__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v[m
[32m+[m
[32m+[m[32m# normalize http auth[m
[32m+[m[32mcase "${MVNW_PASSWORD:+has-password}" in[m
[32m+[m[32m'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mhas-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then[m
[32m+[m[32m  verbose "Found wget ... using wget"[m
[32m+[m[32m  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"[m
[32m+[m[32melif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then[m
[32m+[m[32m  verbose "Found curl ... using curl"[m
[32m+[m[32m  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"[m
[32m+[m[32melif set_java_home; then[m
[32m+[m[32m  verbose "Falling back to use Java to download"[m
[32m+[m[32m  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"[m
[32m+[m[32m  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m[32m  cat >"$javaSource" <<-END[m
[32m+[m	[32mpublic class Downloader extends java.net.Authenticator[m
[32m+[m	[32m{[m
[32m+[m	[32m  protected java.net.PasswordAuthentication getPasswordAuthentication()[m
[32m+[m	[32m  {[m
[32m+[m	[32m    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m  public static void main( String[] args ) throws Exception[m
[32m+[m	[32m  {[m
[32m+[m	[32m    setDefault( new Downloader() );[m
[32m+[m	[32m    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m}[m
[32m+[m	[32mEND[m
[32m+[m[32m  # For Cygwin/MinGW, switch paths to Windows format before running javac and java[m
[32m+[m[32m  verbose " - Compiling Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"[m
[32m+[m[32m  verbose " - Running Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32mif [ -n "${distributionSha256Sum-}" ]; then[m
[32m+[m[32m  distributionSha256Result=false[m
[32m+[m[32m  if [ "$MVN_CMD" = mvnd.sh ]; then[m
[32m+[m[32m    echo "Checksum validation is not supported for maven-mvnd." >&2[m
[32m+[m[32m    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  elif command -v sha256sum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  elif command -v shasum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2[m
[32m+[m[32m    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32m  if [ $distributionSha256Result = false ]; then[m
[32m+[m[32m    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2[m
[32m+[m[32m    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mif command -v unzip >/dev/null; then[m
[32m+[m[32m  unzip ${__MVNW_QUIET_UNZIP:+"$__MVNW_QUIET_UNZIP"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -d "$TMP_DOWNLOAD_DIR" || die "failed to unzip"[m
[32m+[m[32melse[m
[32m+[m[32m  tar xzf${__MVNW_QUIET_TAR:+"$__MVNW_QUIET_TAR"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -C "$TMP_DOWNLOAD_DIR" || die "failed to untar"[m
[32m+[m[32mfi[m
[32m+[m[32mprintf %s\\n "$distributionUrl" >"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url"[m
[32m+[m[32mmv -- "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" "$MAVEN_HOME" || [ -d "$MAVEN_HOME" ] || die "fail to move MAVEN_HOME"[m
[32m+[m
[32m+[m[32mclean || :[m
[32m+[m[32mexec_maven "$@"[m
[1mdiff --git a/inventory-service/mvnw.cmd b/inventory-service/mvnw.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..249bdf3[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/mvnw.cmd[m
[36m@@ -0,0 +1,149 @@[m
[32m+[m[32m<# : batch portion[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m@REM or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m@REM distributed with this work for additional information[m
[32m+[m[32m@REM regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m@REM to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m@REM "License"); you may not use this file except in compliance[m
[32m+[m[32m@REM with the License.  You may obtain a copy of the License at[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m@REM software distributed under the License is distributed on an[m
[32m+[m[32m@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m@REM KIND, either express or implied.  See the License for the[m
[32m+[m[32m@REM specific language governing permissions and limitations[m
[32m+[m[32m@REM under the License.[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Optional ENV vars[m
[32m+[m[32m@REM   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@IF "%__MVNW_ARG0_NAME__%"=="" (SET __MVNW_ARG0_NAME__=%~nx0)[m
[32m+[m[32m@SET __MVNW_CMD__=[m
[32m+[m[32m@SET __MVNW_ERROR__=[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%[m
[32m+[m[32m@SET PSModulePath=[m
[32m+[m[32m@FOR /F "usebackq tokens=1* delims==" %%A IN (`powershell -noprofile "& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}"`) DO @([m
[32m+[m[32m  IF "%%A"=="MVN_CMD" (set __MVNW_CMD__=%%B) ELSE IF "%%B"=="" (echo %%A) ELSE (echo %%A=%%B)[m
[32m+[m[32m)[m
[32m+[m[32m@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=[m
[32m+[m[32m@SET __MVNW_ARG0_NAME__=[m
[32m+[m[32m@SET MVNW_USERNAME=[m
[32m+[m[32m@SET MVNW_PASSWORD=[m
[32m+[m[32m@IF NOT "%__MVNW_CMD__%"=="" (%__MVNW_CMD__% %*)[m
[32m+[m[32m@echo Cannot start maven from wrapper >&2 && exit /b 1[m
[32m+[m[32m@GOTO :EOF[m
[32m+[m[32m: end batch / begin powershell #>[m
[32m+[m
[32m+[m[32m$ErrorActionPreference = "Stop"[m
[32m+[m[32mif ($env:MVNW_VERBOSE -eq "true") {[m
[32m+[m[32m  $VerbosePreference = "Continue"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32m$distributionUrl = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionUrl[m
[32m+[m[32mif (!$distributionUrl) {[m
[32m+[m[32m  Write-Error "cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {[m
[32m+[m[32m  "maven-mvnd-*" {[m
[32m+[m[32m    $USE_MVND = $true[m
[32m+[m[32m    $distributionUrl = $distributionUrl -replace '-bin\.[^.]*$',"-windows-amd64.zip"[m
[32m+[m[32m    $MVN_CMD = "mvnd.cmd"[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m  default {[m
[32m+[m[32m    $USE_MVND = $false[m
[32m+[m[32m    $MVN_CMD = $script -replace '^mvnw','mvn'[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32mif ($env:MVNW_REPOURL) {[m
[32m+[m[32m  $MVNW_REPO_PATTERN = if ($USE_MVND) { "/org/apache/maven/" } else { "/maven/mvnd/" }[m
[32m+[m[32m  $distributionUrl = "$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')"[m
[32m+[m[32m}[m
[32m+[m[32m$distributionUrlName = $distributionUrl -replace '^.*/',''[m
[32m+[m[32m$distributionUrlNameMain = $distributionUrlName -replace '\.[^.]*$','' -replace '-bin$',''[m
[32m+[m[32m$MAVEN_HOME_PARENT = "$HOME/.m2/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32mif ($env:MAVEN_USER_HOME) {[m
[32m+[m[32m  $MAVEN_HOME_PARENT = "$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32m}[m
[32m+[m[32m$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString("x2")}) -join ''[m
[32m+[m[32m$MAVEN_HOME = "$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME"[m
[32m+[m
[32m+[m[32mif (Test-Path -Path "$MAVEN_HOME" -PathType Container) {[m
[32m+[m[32m  Write-Verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m  exit $?[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {[m
[32m+[m[32m  Write-Error "distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile[m
[32m+[m[32m$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path "$TMP_DOWNLOAD_DIR_HOLDER.dir"[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null[m
[32m+[m[32mtrap {[m
[32m+[m[32m  if ($TMP_DOWNLOAD_DIR.Exists) {[m
[32m+[m[32m    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m    catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mNew-Item -Itemtype Directory -Path "$MAVEN_HOME_PARENT" -Force | Out-Null[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mWrite-Verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mWrite-Verbose "Downloading from: $distributionUrl"[m
[32m+[m[32mWrite-Verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m$webclient = New-Object System.Net.WebClient[m
[32m+[m[32mif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {[m
[32m+[m[32m  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)[m
[32m+[m[32m}[m
[32m+[m[32m[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12[m
[32m+[m[32m$webclient.DownloadFile($distributionUrl, "$TMP_DOWNLOAD_DIR/$distributionUrlName") | Out-Null[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32m$distributionSha256Sum = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionSha256Sum[m
[32m+[m[32mif ($distributionSha256Sum) {[m
[32m+[m[32m  if ($USE_MVND) {[m
[32m+[m[32m    Write-Error "Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties."[m
[32m+[m[32m  }[m
[32m+[m[32m  Import-Module $PSHOME\Modules\Microsoft.PowerShell.Utility -Function Get-FileHash[m
[32m+[m[32m  if ((Get-FileHash "$TMP_DOWNLOAD_DIR/$distributionUrlName" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {[m
[32m+[m[32m    Write-Error "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property."[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mExpand-Archive "$TMP_DOWNLOAD_DIR/$distributionUrlName" -DestinationPath "$TMP_DOWNLOAD_DIR" | Out-Null[m
[32m+[m[32mRename-Item -Path "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" -NewName $MAVEN_HOME_NAME | Out-Null[m
[32m+[m[32mtry {[m
[32m+[m[32m  Move-Item -Path "$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME" -Destination $MAVEN_HOME_PARENT | Out-Null[m
[32m+[m[32m} catch {[m
[32m+[m[32m  if (! (Test-Path -Path "$MAVEN_HOME" -PathType Container)) {[m
[32m+[m[32m    Write-Error "fail to move MAVEN_HOME"[m
[32m+[m[32m  }[m
[32m+[m[32m} finally {[m
[32m+[m[32m  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m  catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mWrite-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[1mdiff --git a/inventory-service/pom.xml b/inventory-service/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..9027426[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/pom.xml[m
[36m@@ -0,0 +1,105 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m[32m         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m[32m    <modelVersion>4.0.0</modelVersion>[m
[32m+[m[32m    <parent>[m
[32m+[m[32m        <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m        <artifactId>spring-boot-starter-parent</artifactId>[m
[32m+[m[32m        <version>3.4.0</version>[m
[32m+[m[32m        <relativePath/> <!-- lookup parent from repository -->[m
[32m+[m[32m    </parent>[m
[32m+[m[32m    <groupId>net.khoudmi</groupId>[m
[32m+[m[32m    <artifactId>inventory-service</artifactId>[m
[32m+[m[32m    <version>0.0.1-SNAPSHOT</version>[m
[32m+[m[32m    <name>inventory-service</name>[m
[32m+[m[32m    <description>inventory-service</description>[m
[32m+[m[32m    <url/>[m
[32m+[m[32m    <licenses>[m
[32m+[m[32m        <license/>[m
[32m+[m[32m    </licenses>[m
[32m+[m[32m    <developers>[m
[32m+[m[32m        <developer/>[m
[32m+[m[32m    </developers>[m
[32m+[m[32m    <scm>[m
[32m+[m[32m        <connection/>[m
[32m+[m[32m        <developerConnection/>[m
[32m+[m[32m        <tag/>[m
[32m+[m[32m        <url/>[m
[32m+[m[32m    </scm>[m
[32m+[m[32m    <properties>[m
[32m+[m[32m        <java.version>21</java.version>[m
[32m+[m[32m        <spring-cloud.version>2024.0.0</spring-cloud.version>[m
[32m+[m[32m    </properties>[m
[32m+[m[32m    <dependencies>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m            <artifactId>spring-boot-starter-data-jpa</artifactId>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m            <artifactId>spring-boot-starter-web</artifactId>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.springframework.cloud</groupId>[m
[32m+[m[32m            <artifactId>spring-cloud-starter-config</artifactId>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.springframework.cloud</groupId>[m
[32m+[m[32m            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>[m
[32m+[m[32m        </dependency>[m
[32m+[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>com.h2database</groupId>[m
[32m+[m[32m            <artifactId>h2</artifactId>[m
[32m+[m[32m            <scope>runtime</scope>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.projectlombok</groupId>[m
[32m+[m[32m            <artifactId>lombok</artifactId>[m
[32m+[m[32m            <optional>true</optional>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m            <artifactId>spring-boot-starter-test</artifactId>[m
[32m+[m[32m            <scope>test</scope>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m    </dependencies>[m
[32m+[m[32m    <dependencyManagement>[m
[32m+[m[32m        <dependencies>[m
[32m+[m[32m            <dependency>[m
[32m+[m[32m                <groupId>org.springframework.cloud</groupId>[m
[32m+[m[32m                <artifactId>spring-cloud-dependencies</artifactId>[m
[32m+[m[32m                <version>${spring-cloud.version}</version>[m
[32m+[m[32m                <type>pom</type>[m
[32m+[m[32m                <scope>import</scope>[m
[32m+[m[32m            </dependency>[m
[32m+[m[32m        </dependencies>[m
[32m+[m[32m    </dependencyManagement>[m
[32m+[m
[32m+[m[32m    <build>[m
[32m+[m[32m        <plugins>[m
[32m+[m[32m            <plugin>[m
[32m+[m[32m                <groupId>org.apache.maven.plugins</groupId>[m
[32m+[m[32m                <artifactId>maven-compiler-plugin</artifactId>[m
[32m+[m[32m                <configuration>[m
[32m+[m[32m                    <annotationProcessorPaths>[m
[32m+[m[32m                        <path>[m
[32m+[m[32m                            <groupId>org.projectlombok</groupId>[m
[32m+[m[32m                            <artifactId>lombok</artifactId>[m
[32m+[m[32m                            <version>1.18.30</version>[m
[32m+[m[32m                        </path>[m
[32m+[m[32m                    </annotationProcessorPaths>[m
[32m+[m[32m                </configuration>[m
[32m+[m[32m            </plugin>[m
[32m+[m[32m            <plugin>[m
[32m+[m[32m                <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m                <artifactId>spring-boot-maven-plugin</artifactId>[m
[32m+[m[32m            </plugin>[m
[32m+[m[32m        </plugins>[m
[32m+[m[32m    </build>[m
[32m+[m
[32m+[m[32m</project>[m
[1mdiff --git a/inventory-service/src/main/java/net/khoudmi/inventoryservice/InventoryServiceApplication.java b/inventory-service/src/main/java/net/khoudmi/inventoryservice/InventoryServiceApplication.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d366b95[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/src/main/java/net/khoudmi/inventoryservice/InventoryServiceApplication.java[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32mpackage net.khoudmi.inventoryservice;[m
[32m+[m
[32m+[m[32mimport net.khoudmi.inventoryservice.entities.Product;[m
[32m+[m[32mimport net.khoudmi.inventoryservice.repository.ProductRepository;[m
[32m+[m[32mimport org.springframework.boot.CommandLineRunner;[m
[32m+[m[32mimport org.springframework.boot.SpringApplication;[m
[32m+[m[32mimport org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m[32mimport org.springframework.context.annotation.Bean;[m
[32m+[m
[32m+[m[32mimport java.util.UUID;[m
[32m+[m
[32m+[m[32m@SpringBootApplication[m
[32m+[m[32mpublic class InventoryServiceApplication {[m
[32m+[m
[32m+[m[32m    public static void main(String[] args) {[m
[32m+[m[32m        SpringApplication.run(InventoryServiceApplication.class, args);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Bean[m
[32m+[m[32m    CommandLineRunner commandLineRunner(ProductRepository productRepository) {[m
[32m+[m[32m        return args -> {[m
[32m+[m[32m          productRepository.save(Product.builder()[m
[32m+[m[32m                  .id("P01")[m
[32m+[m[32m                  .name("Computer")[m
[32m+[m[32m                  .price(2300)[m
[32m+[m[32m                  .quantity(12)[m
[32m+[m[32m                  .build());[m
[32m+[m[32m          productRepository.save(Product.builder()[m
[32m+[m[32m                  .id("P02")[m
[32m+[m[32m                  .name("Printer")[m
[32m+[m[32m                  .price(1200)[m
[32m+[m[32m                  .quantity(10)[m
[32m+[m[32m                  .build());[m
[32m+[m[32m          productRepository.save(Product.builder()[m
[32m+[m[32m                  .id("P03")[m
[32m+[m[32m                  .name("Smart Phone")[m
[32m+[m[32m                  .price(4200)[m
[32m+[m[32m                  .quantity(34)[m
[32m+[m[32m                  .build());[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/inventory-service/src/main/java/net/khoudmi/inventoryservice/entities/Product.java b/inventory-service/src/main/java/net/khoudmi/inventoryservice/entities/Product.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e5d129a[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/src/main/java/net/khoudmi/inventoryservice/entities/Product.java[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mpackage net.khoudmi.inventoryservice.entities;[m
[32m+[m
[32m+[m[32mimport jakarta.persistence.Entity;[m
[32m+[m[32mimport jakarta.persistence.Id;[m
[32m+[m[32mimport lombok.*;[m
[32m+[m
[32m+[m[32m@Entity[m
[32m+[m[32m@AllArgsConstructor @NoArgsConstructor @Getter[m
[32m+[m[32m@Setter @ToString @Builder[m
[32m+[m[32mpublic class Product {[m
[32m+[m[32m    @Id[m
[32m+[m[32m    private String id;[m
[32m+[m[32m    private String name;[m
[32m+[m[32m    private double price;[m
[32m+[m[32m    private int quantity;[m
[32m+[m[32m}[m
[1mdiff --git a/inventory-service/src/main/java/net/khoudmi/inventoryservice/repository/ProductRepository.java b/inventory-service/src/main/java/net/khoudmi/inventoryservice/repository/ProductRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..895a50f[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/src/main/java/net/khoudmi/inventoryservice/repository/ProductRepository.java[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mpackage net.khoudmi.inventoryservice.repository;[m
[32m+[m
[32m+[m[32mimport net.khoudmi.inventoryservice.entities.Product;[m
[32m+[m[32mimport org.springframework.data.jpa.repository.JpaRepository;[m
[32m+[m
[32m+[m[32mpublic interface ProductRepository extends JpaRepository<Product, String> {[m
[32m+[m[32m}[m
[1mdiff --git a/inventory-service/src/main/java/net/khoudmi/inventoryservice/security/JwtAuthConverter.java b/inventory-service/src/main/java/net/khoudmi/inventoryservice/security/JwtAuthConverter.java[m
[1mnew file mode 100644[m
[1mindex 0000000..65ab5f9[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/src/main/java/net/khoudmi/inventoryservice/security/JwtAuthConverter.java[m
[36m@@ -0,0 +1,52 @@[m
[32m+[m[32mpackage net.khoudmi.inventoryservice.security;[m
[32m+[m
[32m+[m[32mimport com.fasterxml.jackson.databind.JavaType;[m
[32m+[m[32mimport com.fasterxml.jackson.databind.type.TypeFactory;[m
[32m+[m[32mimport com.fasterxml.jackson.databind.util.Converter;[m
[32m+[m[32mimport org.springframework.security.authentication.AbstractAuthenticationToken;[m
[32m+[m[32mimport org.springframework.security.core.GrantedAuthority;[m
[32m+[m[32mimport org.springframework.security.core.authority.SimpleGrantedAuthority;[m
[32m+[m[32mimport org.springframework.security.oauth2.jwt.Jwt;[m
[32m+[m[32mimport org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken;[m
[32m+[m[32mimport org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;[m
[32m+[m[32mimport org.springframework.stereotype.Component;[m
[32m+[m
[32m+[m[32mimport java.util.Collection;[m
[32m+[m[32mimport java.util.Map;[m
[32m+[m[32mimport java.util.Set;[m
[32m+[m[32mimport java.util.stream.Collectors;[m
[32m+[m[32mimport java.util.stream.Stream;[m
[32m+[m
[32m+[m[32m@Component[m
[32m+[m[32mpublic class JwtAuthConverter implements Converter<Jwt, AbstractAuthenticationToken>, org.springframework.core.convert.converter.Converter<Jwt, AbstractAuthenticationToken> {[m
[32m+[m[32m    private final JwtGrantedAuthoritiesConverter jwtGrantedAuthoritiesConverter = new JwtGrantedAuthoritiesConverter();[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public AbstractAuthenticationToken convert(Jwt jwt) {[m
[32m+[m[32m        Collection<GrantedAuthority> authorities = Stream.concat([m
[32m+[m[32m                jwtGrantedAuthoritiesConverter.convert(jwt).stream(),[m
[32m+[m[32m                extractResourceRoles(jwt).stream()[m
[32m+[m[32m        ).collect(Collectors.toSet());[m
[32m+[m[32m        return new JwtAuthenticationToken(jwt, authorities, jwt.getClaim("preferred_username"));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private Collection<GrantedAuthority> extractResourceRoles(Jwt jwt) {[m
[32m+[m[32m        Map<String, Object> realmAccess;[m
[32m+[m[32m        Collection<String> roles;[m
[32m+[m[32m        if(jwt.getClaim("realm_access")==null){[m
[32m+[m[32m            return Set.of();[m
[32m+[m[32m        }[m
[32m+[m[32m        realmAccess = jwt.getClaim("realm_access");[m
[32m+[m[32m        roles = (Collection<String>) realmAccess.get("roles");[m
[32m+[m[32m        return roles.stream().map(role->new SimpleGrantedAuthority(role)).collect(Collectors.toSet());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public JavaType getInputType(TypeFactory typeFactory) {[m
[32m+[m[32m        return null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public JavaType getOutputType(TypeFactory typeFactory) {[m
[32m+[m[32m        return null;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/inventory-service/src/main/java/net/khoudmi/inventoryservice/security/SecurityConfig.java b/inventory-service/src/main/java/net/khoudmi/inventoryservice/security/SecurityConfig.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f6b508c[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/src/main/java/net/khoudmi/inventoryservice/security/SecurityConfig.java[m
[36m@@ -0,0 +1,57 @@[m
[32m+[m[32mpackage net.khoudmi.inventoryservice.security;[m
[32m+[m
[32m+[m[32mimport org.springframework.context.annotation.Bean;[m
[32m+[m[32mimport org.springframework.context.annotation.Configuration;[m
[32m+[m[32mimport org.springframework.security.config.Customizer;[m
[32m+[m[32mimport org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;[m
[32m+[m[32mimport org.springframework.security.config.annotation.web.builders.HttpSecurity;[m
[32m+[m[32mimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;[m
[32m+[m[32mimport org.springframework.security.config.http.SessionCreationPolicy;[m
[32m+[m[32mimport org.springframework.security.web.SecurityFilterChain;[m
[32m+[m[32mimport org.springframework.web.cors.CorsConfiguration;[m
[32m+[m[32mimport org.springframework.web.cors.CorsConfigurationSource;[m
[32m+[m[32mimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;[m
[32m+[m
[32m+[m[32mimport java.util.Arrays;[m
[32m+[m
[32m+[m[32m@Configuration[m
[32m+[m[32m@EnableWebSecurity[m
[32m+[m[32m@EnableMethodSecurity(prePostEnabled = true)[m
[32m+[m[32mpublic class SecurityConfig {[m
[32m+[m[32m    private JwtAuthConverter jwtAuthConverter;[m
[32m+[m
[32m+[m[32m    public SecurityConfig(JwtAuthConverter jwtAuthConverter) {[m
[32m+[m[32m        this.jwtAuthConverter = jwtAuthConverter;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Bean[m
[32m+[m[32m    public SecurityFilterChain securityFilterChain([m
[32m+[m[32m            HttpSecurity httpSecurity)[m
[32m+[m[32m            throws Exception {[m
[32m+[m[32m        return httpSecurity[m
[32m+[m[32m                .cors(Customizer.withDefaults())[m
[32m+[m[32m                .sessionManagement(sm->sm.sessionCreationPolicy([m
[32m+[m[32m                        SessionCreationPolicy.STATELESS))[m
[32m+[m[32m                .csrf(csrf->csrf.disable())[m
[32m+[m[32m                .headers(h->h.frameOptions(fo->fo.disable()))[m
[32m+[m[32m                .authorizeHttpRequests([m
[32m+[m[32m                        ar->ar.requestMatchers("/h2-console/**")[m
[32m+[m[32m                          .permitAll())[m
[32m+[m[32m//                .authorizeHttpRequests(ar->ar.requestMatchers("/api/products/**").hasAuthority("ADMIN"))[m
[32m+[m[32m                .authorizeHttpRequests([m
[32m+[m[32m                        ar->ar.anyRequest().authenticated())[m
[32m+[m[32m                .oauth2ResourceServer(o2->o2.jwt(jwt->jwt.jwtAuthenticationConverter(jwtAuthConverter)))[m
[32m+[m[32m                .build();[m
[32m+[m[32m    }[m
[32m+[m[32m    @Bean[m
[32m+[m[32m    CorsConfigurationSource corsConfigurationSource(){[m
[32m+[m[32m        CorsConfiguration configuration = new CorsConfiguration();[m
[32m+[m[32m        configuration.setAllowedOrigins(Arrays.asList("*"));[m
[32m+[m[32m        configuration.setAllowedMethods(Arrays.asList("*"));[m
[32m+[m[32m        configuration.setAllowedHeaders(Arrays.asList("*"));[m
[32m+[m[32m        configuration.setExposedHeaders(Arrays.asList("*"));[m
[32m+[m[32m        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();[m
[32m+[m[32m        source.registerCorsConfiguration("/**", configuration);[m
[32m+[m[32m        return source;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/inventory-service/src/main/java/net/khoudmi/inventoryservice/web/ProductRestController.java b/inventory-service/src/main/java/net/khoudmi/inventoryservice/web/ProductRestController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..ba1b7b6[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/src/main/java/net/khoudmi/inventoryservice/web/ProductRestController.java[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32mpackage net.khoudmi.inventoryservice.web;[m
[32m+[m
[32m+[m[32mimport net.khoudmi.inventoryservice.entities.Product;[m
[32m+[m[32mimport net.khoudmi.inventoryservice.repository.ProductRepository;[m
[32m+[m[32mimport org.springframework.security.access.prepost.PreAuthorize;[m
[32m+[m[32mimport org.springframework.security.core.Authentication;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.*;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m@RestController[m
[32m+[m[32m@RequestMapping("/api")[m
[32m+[m[32m//@CrossOrigin("*")[m
[32m+[m[32mpublic class ProductRestController {[m
[32m+[m[32m    private ProductRepository productRepository;[m
[32m+[m
[32m+[m[32m    public ProductRestController(ProductRepository productRepository) {[m
[32m+[m[32m        this.productRepository = productRepository;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping("/products")[m
[32m+[m[32m//    @PreAuthorize("hasAuthority('ADMIN')")[m
[32m+[m[32m    public List<Product> productList(){[m
[32m+[m[32m        return productRepository.findAll();[m
[32m+[m[32m    }[m
[32m+[m[32m    @GetMapping("/products/{id}")[m
[32m+[m[32m//    @PreAuthorize("hasAuthority('USER')")[m
[32m+[m[32m    public Product productById(@PathVariable String id){[m
[32m+[m[32m        return productRepository.findById(id).get();[m
[32m+[m[32m    }[m
[32m+[m[32m    @GetMapping("/auth")[m
[32m+[m[32m    public Authentication authentication(Authentication authentication){[m
[32m+[m[32m        return authentication;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/inventory-service/src/main/resources/application.properties b/inventory-service/src/main/resources/application.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..05e9dfc[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/src/main/resources/application.properties[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mspring.application.name=inventory-service[m
[32m+[m[32mserver.port=8087[m
[32m+[m[32mspring.datasource.url=jdbc:h2:mem:products-db[m
[32m+[m[32mspring.h2.console.enabled=true[m
[32m+[m
[32m+[m[32mspring.cloud.config.enabled=false[m
[32m+[m[32mspring.cloud.discovery.enabled=false[m
[32m+[m
[32m+[m[32mspring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/bdcc-realm[m
[32m+[m[32mspring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/bdcc-realm/protocol/openid-connect/certs[m
[1mdiff --git a/inventory-service/src/test/java/net/khoudmi/inventoryservice/InventoryServiceApplicationTests.java b/inventory-service/src/test/java/net/khoudmi/inventoryservice/InventoryServiceApplicationTests.java[m
[1mnew file mode 100644[m
[1mindex 0000000..45cd110[m
[1m--- /dev/null[m
[1m+++ b/inventory-service/src/test/java/net/khoudmi/inventoryservice/InventoryServiceApplicationTests.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage net.khoudmi.inventoryservice;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.api.Test;[m
[32m+[m[32mimport org.springframework.boot.test.context.SpringBootTest;[m
[32m+[m
[32m+[m[32m@SpringBootTest[m
[32m+[m[32mclass InventoryServiceApplicationTests {[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    void contextLoads() {[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/.gitattributes b/order-service/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..3b41682[m
[1m--- /dev/null[m
[1m+++ b/order-service/.gitattributes[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m/mvnw text eol=lf[m
[32m+[m[32m*.cmd text eol=crlf[m
[1mdiff --git a/order-service/.gitignore b/order-service/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..549e00a[m
[1m--- /dev/null[m
[1m+++ b/order-service/.gitignore[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mHELP.md[m
[32m+[m[32mtarget/[m
[32m+[m[32m!.mvn/wrapper/maven-wrapper.jar[m
[32m+[m[32m!**/src/main/**/target/[m
[32m+[m[32m!**/src/test/**/target/[m
[32m+[m
[32m+[m[32m### STS ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32m.idea[m
[32m+[m[32m*.iws[m
[32m+[m[32m*.iml[m
[32m+[m[32m*.ipr[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m[32mbuild/[m
[32m+[m[32m!**/src/main/**/build/[m
[32m+[m[32m!**/src/test/**/build/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[1mdiff --git a/order-service/.mvn/wrapper/maven-wrapper.properties b/order-service/.mvn/wrapper/maven-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..d58dfb7[m
[1m--- /dev/null[m
[1m+++ b/order-service/.mvn/wrapper/maven-wrapper.properties[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#   http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32mwrapperVersion=3.3.2[m
[32m+[m[32mdistributionType=only-script[m
[32m+[m[32mdistributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip[m
[1mdiff --git a/order-service/mvnw b/order-service/mvnw[m
[1mnew file mode 100644[m
[1mindex 0000000..19529dd[m
[1m--- /dev/null[m
[1m+++ b/order-service/mvnw[m
[36m@@ -0,0 +1,259 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m#[m
[32m+[m[32m# Optional ENV vars[m
[32m+[m[32m# -----------------[m
[32m+[m[32m#   JAVA_HOME - location of a JDK home dir, required when download maven via java source[m
[32m+[m[32m#   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mset -euf[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != debug ] || set -x[m
[32m+[m
[32m+[m[32m# OS specific support.[m
[32m+[m[32mnative_path() { printf %s\\n "$1"; }[m
[32m+[m[32mcase "$(uname)" in[m
[32m+[m[32mCYGWIN* | MINGW*)[m
[32m+[m[32m  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"[m
[32m+[m[32m  native_path() { cygpath --path --windows "$1"; }[m
[32m+[m[32m  ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# set JAVACMD and JAVACCMD[m
[32m+[m[32mset_java_home() {[m
[32m+[m[32m  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched[m
[32m+[m[32m  if [ -n "${JAVA_HOME-}" ]; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ]; then[m
[32m+[m[32m      # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/jre/sh/javac"[m
[32m+[m[32m    else[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/bin/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/bin/javac"[m
[32m+[m
[32m+[m[32m      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then[m
[32m+[m[32m        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2[m
[32m+[m[32m        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2[m
[32m+[m[32m        return 1[m
[32m+[m[32m      fi[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    JAVACMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v java[m
[32m+[m[32m    )" || :[m
[32m+[m[32m    JAVACCMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v javac[m
[32m+[m[32m    )" || :[m
[32m+[m
[32m+[m[32m    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then[m
[32m+[m[32m      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2[m
[32m+[m[32m      return 1[m
[32m+[m[32m    fi[m
[32m+[m[32m  fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# hash string like Java String::hashCode[m
[32m+[m[32mhash_string() {[m
[32m+[m[32m  str="${1:-}" h=0[m
[32m+[m[32m  while [ -n "$str" ]; do[m
[32m+[m[32m    char="${str%"${str#?}"}"[m
[32m+[m[32m    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))[m
[32m+[m[32m    str="${str#?}"[m
[32m+[m[32m  done[m
[32m+[m[32m  printf %x\\n $h[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mverbose() { :; }[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }[m
[32m+[m
[32m+[m[32mdie() {[m
[32m+[m[32m  printf %s\\n "$1" >&2[m
[32m+[m[32m  exit 1[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtrim() {[m
[32m+[m[32m  # MWRAPPER-139:[m
[32m+[m[32m  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.[m
[32m+[m[32m  #   Needed for removing poorly interpreted newline sequences when running in more[m
[32m+[m[32m  #   exotic environments such as mingw bash on Windows.[m
[32m+[m[32m  printf "%s" "${1}" | tr -d '[:space:]'[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32mwhile IFS="=" read -r key value; do[m
[32m+[m[32m  case "${key-}" in[m
[32m+[m[32m  distributionUrl) distributionUrl=$(trim "${value-}") ;;[m
[32m+[m[32m  distributionSha256Sum) distributionSha256Sum=$(trim "${value-}") ;;[m
[32m+[m[32m  esac[m
[32m+[m[32mdone <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m
[32m+[m[32mcase "${distributionUrl##*/}" in[m
[32m+[m[32mmaven-mvnd-*bin.*)[m
[32m+[m[32m  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/[m
[32m+[m[32m  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in[m
[32m+[m[32m  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;[m
[32m+[m[32m  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;[m
[32m+[m[32m  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;[m
[32m+[m[32m  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;[m
[32m+[m[32m  *)[m
[32m+[m[32m    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2[m
[32m+[m[32m    distributionPlatform=linux-amd64[m
[32m+[m[32m    ;;[m
[32m+[m[32m  esac[m
[32m+[m[32m  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"[m
[32m+[m[32m  ;;[m
[32m+[m[32mmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;[m
[32m+[m[32m*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32m[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"[m
[32m+[m[32mdistributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlName%.*}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlNameMain%-bin}"[m
[32m+[m[32mMAVEN_USER_HOME="${MAVEN_USER_HOME:-${HOME}/.m2}"[m
[32m+[m[32mMAVEN_HOME="${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"[m
[32m+[m
[32m+[m[32mexec_maven() {[m
[32m+[m[32m  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :[m
[32m+[m[32m  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif [ -d "$MAVEN_HOME" ]; then[m
[32m+[m[32m  verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  exec_maven "$@"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mcase "${distributionUrl-}" in[m
[32m+[m[32m*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;[m
[32m+[m[32m*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32mif TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then[m
[32m+[m[32m  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }[m
[32m+[m[32m  trap clean HUP INT TERM EXIT[m
[32m+[m[32melse[m
[32m+[m[32m  die "cannot create temp dir"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mmkdir -p -- "${MAVEN_HOME%/*}"[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mverbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mverbose "Downloading from: $distributionUrl"[m
[32m+[m[32mverbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m# select .zip or .tar.gz[m
[32m+[m[32mif ! command -v unzip >/dev/null; then[m
[32m+[m[32m  distributionUrl="${distributionUrl%.zip}.tar.gz"[m
[32m+[m[32m  distributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# verbose opt[m
[32m+[m[32m__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v[m
[32m+[m
[32m+[m[32m# normalize http auth[m
[32m+[m[32mcase "${MVNW_PASSWORD:+has-password}" in[m
[32m+[m[32m'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mhas-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then[m
[32m+[m[32m  verbose "Found wget ... using wget"[m
[32m+[m[32m  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"[m
[32m+[m[32melif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then[m
[32m+[m[32m  verbose "Found curl ... using curl"[m
[32m+[m[32m  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"[m
[32m+[m[32melif set_java_home; then[m
[32m+[m[32m  verbose "Falling back to use Java to download"[m
[32m+[m[32m  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"[m
[32m+[m[32m  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m[32m  cat >"$javaSource" <<-END[m
[32m+[m	[32mpublic class Downloader extends java.net.Authenticator[m
[32m+[m	[32m{[m
[32m+[m	[32m  protected java.net.PasswordAuthentication getPasswordAuthentication()[m
[32m+[m	[32m  {[m
[32m+[m	[32m    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m  public static void main( String[] args ) throws Exception[m
[32m+[m	[32m  {[m
[32m+[m	[32m    setDefault( new Downloader() );[m
[32m+[m	[32m    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m}[m
[32m+[m	[32mEND[m
[32m+[m[32m  # For Cygwin/MinGW, switch paths to Windows format before running javac and java[m
[32m+[m[32m  verbose " - Compiling Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"[m
[32m+[m[32m  verbose " - Running Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32mif [ -n "${distributionSha256Sum-}" ]; then[m
[32m+[m[32m  distributionSha256Result=false[m
[32m+[m[32m  if [ "$MVN_CMD" = mvnd.sh ]; then[m
[32m+[m[32m    echo "Checksum validation is not supported for maven-mvnd." >&2[m
[32m+[m[32m    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  elif command -v sha256sum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  elif command -v shasum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2[m
[32m+[m[32m    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32m  if [ $distributionSha256Result = false ]; then[m
[32m+[m[32m    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2[m
[32m+[m[32m    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mif command -v unzip >/dev/null; then[m
[32m+[m[32m  unzip ${__MVNW_QUIET_UNZIP:+"$__MVNW_QUIET_UNZIP"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -d "$TMP_DOWNLOAD_DIR" || die "failed to unzip"[m
[32m+[m[32melse[m
[32m+[m[32m  tar xzf${__MVNW_QUIET_TAR:+"$__MVNW_QUIET_TAR"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -C "$TMP_DOWNLOAD_DIR" || die "failed to untar"[m
[32m+[m[32mfi[m
[32m+[m[32mprintf %s\\n "$distributionUrl" >"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url"[m
[32m+[m[32mmv -- "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" "$MAVEN_HOME" || [ -d "$MAVEN_HOME" ] || die "fail to move MAVEN_HOME"[m
[32m+[m
[32m+[m[32mclean || :[m
[32m+[m[32mexec_maven "$@"[m
[1mdiff --git a/order-service/mvnw.cmd b/order-service/mvnw.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..249bdf3[m
[1m--- /dev/null[m
[1m+++ b/order-service/mvnw.cmd[m
[36m@@ -0,0 +1,149 @@[m
[32m+[m[32m<# : batch portion[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m@REM or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m@REM distributed with this work for additional information[m
[32m+[m[32m@REM regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m@REM to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m@REM "License"); you may not use this file except in compliance[m
[32m+[m[32m@REM with the License.  You may obtain a copy of the License at[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m@REM software distributed under the License is distributed on an[m
[32m+[m[32m@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m@REM KIND, either express or implied.  See the License for the[m
[32m+[m[32m@REM specific language governing permissions and limitations[m
[32m+[m[32m@REM under the License.[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Optional ENV vars[m
[32m+[m[32m@REM   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@IF "%__MVNW_ARG0_NAME__%"=="" (SET __MVNW_ARG0_NAME__=%~nx0)[m
[32m+[m[32m@SET __MVNW_CMD__=[m
[32m+[m[32m@SET __MVNW_ERROR__=[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%[m
[32m+[m[32m@SET PSModulePath=[m
[32m+[m[32m@FOR /F "usebackq tokens=1* delims==" %%A IN (`powershell -noprofile "& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}"`) DO @([m
[32m+[m[32m  IF "%%A"=="MVN_CMD" (set __MVNW_CMD__=%%B) ELSE IF "%%B"=="" (echo %%A) ELSE (echo %%A=%%B)[m
[32m+[m[32m)[m
[32m+[m[32m@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=[m
[32m+[m[32m@SET __MVNW_ARG0_NAME__=[m
[32m+[m[32m@SET MVNW_USERNAME=[m
[32m+[m[32m@SET MVNW_PASSWORD=[m
[32m+[m[32m@IF NOT "%__MVNW_CMD__%"=="" (%__MVNW_CMD__% %*)[m
[32m+[m[32m@echo Cannot start maven from wrapper >&2 && exit /b 1[m
[32m+[m[32m@GOTO :EOF[m
[32m+[m[32m: end batch / begin powershell #>[m
[32m+[m
[32m+[m[32m$ErrorActionPreference = "Stop"[m
[32m+[m[32mif ($env:MVNW_VERBOSE -eq "true") {[m
[32m+[m[32m  $VerbosePreference = "Continue"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32m$distributionUrl = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionUrl[m
[32m+[m[32mif (!$distributionUrl) {[m
[32m+[m[32m  Write-Error "cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {[m
[32m+[m[32m  "maven-mvnd-*" {[m
[32m+[m[32m    $USE_MVND = $true[m
[32m+[m[32m    $distributionUrl = $distributionUrl -replace '-bin\.[^.]*$',"-windows-amd64.zip"[m
[32m+[m[32m    $MVN_CMD = "mvnd.cmd"[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m  default {[m
[32m+[m[32m    $USE_MVND = $false[m
[32m+[m[32m    $MVN_CMD = $script -replace '^mvnw','mvn'[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32mif ($env:MVNW_REPOURL) {[m
[32m+[m[32m  $MVNW_REPO_PATTERN = if ($USE_MVND) { "/org/apache/maven/" } else { "/maven/mvnd/" }[m
[32m+[m[32m  $distributionUrl = "$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')"[m
[32m+[m[32m}[m
[32m+[m[32m$distributionUrlName = $distributionUrl -replace '^.*/',''[m
[32m+[m[32m$distributionUrlNameMain = $distributionUrlName -replace '\.[^.]*$','' -replace '-bin$',''[m
[32m+[m[32m$MAVEN_HOME_PARENT = "$HOME/.m2/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32mif ($env:MAVEN_USER_HOME) {[m
[32m+[m[32m  $MAVEN_HOME_PARENT = "$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32m}[m
[32m+[m[32m$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString("x2")}) -join ''[m
[32m+[m[32m$MAVEN_HOME = "$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME"[m
[32m+[m
[32m+[m[32mif (Test-Path -Path "$MAVEN_HOME" -PathType Container) {[m
[32m+[m[32m  Write-Verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m  exit $?[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {[m
[32m+[m[32m  Write-Error "distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile[m
[32m+[m[32m$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path "$TMP_DOWNLOAD_DIR_HOLDER.dir"[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null[m
[32m+[m[32mtrap {[m
[32m+[m[32m  if ($TMP_DOWNLOAD_DIR.Exists) {[m
[32m+[m[32m    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m    catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mNew-Item -Itemtype Directory -Path "$MAVEN_HOME_PARENT" -Force | Out-Null[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mWrite-Verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mWrite-Verbose "Downloading from: $distributionUrl"[m
[32m+[m[32mWrite-Verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m$webclient = New-Object System.Net.WebClient[m
[32m+[m[32mif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {[m
[32m+[m[32m  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)[m
[32m+[m[32m}[m
[32m+[m[32m[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12[m
[32m+[m[32m$webclient.DownloadFile($distributionUrl, "$TMP_DOWNLOAD_DIR/$distributionUrlName") | Out-Null[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32m$distributionSha256Sum = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionSha256Sum[m
[32m+[m[32mif ($distributionSha256Sum) {[m
[32m+[m[32m  if ($USE_MVND) {[m
[32m+[m[32m    Write-Error "Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties."[m
[32m+[m[32m  }[m
[32m+[m[32m  Import-Module $PSHOME\Modules\Microsoft.PowerShell.Utility -Function Get-FileHash[m
[32m+[m[32m  if ((Get-FileHash "$TMP_DOWNLOAD_DIR/$distributionUrlName" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {[m
[32m+[m[32m    Write-Error "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property."[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mExpand-Archive "$TMP_DOWNLOAD_DIR/$distributionUrlName" -DestinationPath "$TMP_DOWNLOAD_DIR" | Out-Null[m
[32m+[m[32mRename-Item -Path "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" -NewName $MAVEN_HOME_NAME | Out-Null[m
[32m+[m[32mtry {[m
[32m+[m[32m  Move-Item -Path "$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME" -Destination $MAVEN_HOME_PARENT | Out-Null[m
[32m+[m[32m} catch {[m
[32m+[m[32m  if (! (Test-Path -Path "$MAVEN_HOME" -PathType Container)) {[m
[32m+[m[32m    Write-Error "fail to move MAVEN_HOME"[m
[32m+[m[32m  }[m
[32m+[m[32m} finally {[m
[32m+[m[32m  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m  catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mWrite-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[1mdiff --git a/order-service/pom.xml b/order-service/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..c3644f4[m
[1m--- /dev/null[m
[1m+++ b/order-service/pom.xml[m
[36m@@ -0,0 +1,117 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m[32m         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m[32m  <modelVersion>4.0.0</modelVersion>[m
[32m+[m[32m  <parent>[m
[32m+[m[32m    <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m    <artifactId>spring-boot-starter-parent</artifactId>[m
[32m+[m[32m    <version>3.4.1</version>[m
[32m+[m[32m    <relativePath/> <!-- lookup parent from repository -->[m
[32m+[m[32m  </parent>[m
[32m+[m[32m  <groupId>net.khoudmi</groupId>[m
[32m+[m[32m  <artifactId>order-service</artifactId>[m
[32m+[m[32m  <version>0.0.1-SNAPSHOT</version>[m
[32m+[m[32m  <name>order-service</name>[m
[32m+[m[32m  <description>order-service</description>[m
[32m+[m[32m  <url/>[m
[32m+[m[32m  <licenses>[m
[32m+[m[32m    <license/>[m
[32m+[m[32m  </licenses>[m
[32m+[m[32m  <developers>[m
[32m+[m[32m    <developer/>[m
[32m+[m[32m  </developers>[m
[32m+[m[32m  <scm>[m
[32m+[m[32m    <connection/>[m
[32m+[m[32m    <developerConnection/>[m
[32m+[m[32m    <tag/>[m
[32m+[m[32m    <url/>[m
[32m+[m[32m  </scm>[m
[32m+[m[32m  <properties>[m
[32m+[m[32m    <java.version>21</java.version>[m
[32m+[m[32m    <spring-cloud.version>2024.0.0</spring-cloud.version>[m
[32m+[m[32m  </properties>[m
[32m+[m[32m  <dependencies>[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m      <artifactId>spring-boot-starter-data-jpa</artifactId>[m
[32m+[m[32m    </dependency>[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>[m
[32m+[m[32m    </dependency>[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m      <artifactId>spring-boot-starter-web</artifactId>[m
[32m+[m[32m    </dependency>[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>org.springframework.cloud</groupId>[m
[32m+[m[32m      <artifactId>spring-cloud-starter-config</artifactId>[m
[32m+[m[32m    </dependency>[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>org.springframework.cloud</groupId>[m
[32m+[m[32m      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>[m
[32m+[m[32m    </dependency>[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>org.springframework.cloud</groupId>[m
[32m+[m[32m      <artifactId>spring-cloud-starter-openfeign</artifactId>[m
[32m+[m[32m    </dependency>[m
[32m+[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>com.h2database</groupId>[m
[32m+[m[32m      <artifactId>h2</artifactId>[m
[32m+[m[32m      <scope>runtime</scope>[m
[32m+[m[32m    </dependency>[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>org.projectlombok</groupId>[m
[32m+[m[32m      <artifactId>lombok</artifactId>[m
[32m+[m[32m      <version>1.18.30</version>[m
[32m+[m[32m      <optional>true</optional>[m
[32m+[m[32m    </dependency>[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m      <artifactId>spring-boot-starter-test</artifactId>[m
[32m+[m[32m      <scope>test</scope>[m
[32m+[m[32m    </dependency>[m
[32m+[m
[32m+[m[32m    <dependency>[m
[32m+[m[32m      <groupId>org.springdoc</groupId>[m
[32m+[m[32m      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>[m
[32m+[m[32m      <version>2.7.0</version>[m
[32m+[m[32m    </dependency>[m
[32m+[m
[32m+[m[32m  </dependencies>[m
[32m+[m[32m  <dependencyManagement>[m
[32m+[m[32m    <dependencies>[m
[32m+[m[32m      <dependency>[m
[32m+[m[32m        <groupId>org.springframework.cloud</groupId>[m
[32m+[m[32m        <artifactId>spring-cloud-dependencies</artifactId>[m
[32m+[m[32m        <version>${spring-cloud.version}</version>[m
[32m+[m[32m        <type>pom</type>[m
[32m+[m[32m        <scope>import</scope>[m
[32m+[m[32m      </dependency>[m
[32m+[m[32m    </dependencies>[m
[32m+[m[32m  </dependencyManagement>[m
[32m+[m
[32m+[m[32m  <build>[m
[32m+[m[32m    <plugins>[m
[32m+[m[32m      <plugin>[m
[32m+[m[32m        <groupId>org.apache.maven.plugins</groupId>[m
[32m+[m[32m        <artifactId>maven-compiler-plugin</artifactId>[m
[32m+[m[32m        <configuration>[m
[32m+[m[32m          <annotationProcessorPaths>[m
[32m+[m[32m            <path>[m
[32m+[m[32m              <groupId>org.projectlombok</groupId>[m
[32m+[m[32m              <artifactId>lombok</artifactId>[m
[32m+[m[32m              <version>1.18.30</version>[m
[32m+[m[32m            </path>[m
[32m+[m[32m          </annotationProcessorPaths>[m
[32m+[m[32m        </configuration>[m
[32m+[m[32m      </plugin>[m
[32m+[m[32m      <plugin>[m
[32m+[m[32m        <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m        <artifactId>spring-boot-maven-plugin</artifactId>[m
[32m+[m[32m      </plugin>[m
[32m+[m[32m    </plugins>[m
[32m+[m[32m  </build>[m
[32m+[m
[32m+[m[32m</project>[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/OrderServiceApplication.java b/order-service/src/main/java/net/khoudmi/orderservice/OrderServiceApplication.java[m
[1mnew file mode 100644[m
[1mindex 0000000..c3a5806[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/OrderServiceApplication.java[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice;[m
[32m+[m
[32m+[m[32mimport net.khoudmi.orderservice.entities.Order;[m
[32m+[m[32mimport net.khoudmi.orderservice.entities.OrderState;[m
[32m+[m[32mimport net.khoudmi.orderservice.entities.ProductItem;[m
[32m+[m[32mimport net.khoudmi.orderservice.model.Product;[m
[32m+[m[32mimport net.khoudmi.orderservice.repositories.OrderRepository;[m
[32m+[m[32mimport net.khoudmi.orderservice.repositories.ProductItemRepository;[m
[32m+[m[32mimport net.khoudmi.orderservice.restclients.InventoryRestClient;[m
[32m+[m[32mimport org.springframework.boot.CommandLineRunner;[m
[32m+[m[32mimport org.springframework.boot.SpringApplication;[m
[32m+[m[32mimport org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m[32mimport org.springframework.cloud.openfeign.EnableFeignClients;[m
[32m+[m[32mimport org.springframework.context.annotation.Bean;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m[32mimport java.util.Random;[m
[32m+[m[32mimport java.util.UUID;[m
[32m+[m
[32m+[m[32m@SpringBootApplication[m
[32m+[m[32m@EnableFeignClients[m
[32m+[m[32mpublic class OrderServiceApplication {[m
[32m+[m
[32m+[m[32m  public static void main(String[] args) {[m
[32m+[m[32m    SpringApplication.run(OrderServiceApplication.class, args);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  @Bean[m
[32m+[m[32m  CommandLineRunner commandLineRunner([m
[32m+[m[32m      OrderRepository orderRepository,[m
[32m+[m[32m      ProductItemRepository productItemRepository,[m
[32m+[m[32m      InventoryRestClient inventoryRestClient) {[m
[32m+[m
[32m+[m[32m    return args -> {[m
[32m+[m[32m//      List<Product> allProducts =[m
[32m+[m[32m//        inventoryRestClient.getAllProducts();[m
[32m+[m[32m      List<String> productIds = List.of("P01","P02","P03");[m
[32m+[m[32m      for (int i = 0; i < 5; i++) {[m
[32m+[m[32m        Order order = Order.builder()[m
[32m+[m[32m          .id(UUID.randomUUID().toString())[m
[32m+[m[32m          .date(LocalDate.now())[m
[32m+[m[32m          .state(OrderState.PENDING)[m
[32m+[m[32m          .build();[m
[32m+[m[32m        Order savedOrder = orderRepository.save(order);[m
[32m+[m[32m        productIds.forEach(pId -> {[m
[32m+[m[32m          ProductItem productItem =[m
[32m+[m[32m            ProductItem.builder()[m
[32m+[m[32m              .productId(pId)[m
[32m+[m[32m              .quantity(new Random().nextInt(20))[m
[32m+[m[32m              .price(Math.random() * 6000+100)[m
[32m+[m[32m              .order(savedOrder)[m
[32m+[m[32m              .build();[m
[32m+[m[32m          productItemRepository.save(productItem);[m
[32m+[m[32m        });[m
[32m+[m[32m      }[m
[32m+[m[32m    };[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/entities/Order.java b/order-service/src/main/java/net/khoudmi/orderservice/entities/Order.java[m
[1mnew file mode 100644[m
[1mindex 0000000..ffe97b0[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/entities/Order.java[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice.entities;[m
[32m+[m
[32m+[m[32mimport jakarta.persistence.*;[m
[32m+[m[32mimport lombok.*;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m@Entity[m
[32m+[m[32m@NoArgsConstructor @AllArgsConstructor @Getter[m
[32m+[m[32m@Setter @Builder @ToString[m
[32m+[m[32m@Table(name = "ORDERS")[m
[32m+[m[32mpublic class Order {[m
[32m+[m[32m  @Id[m
[32m+[m[32m  private String id;[m
[32m+[m[32m  private LocalDate date;[m
[32m+[m[32m  @Enumerated(EnumType.STRING)[m
[32m+[m[32m  private OrderState state;[m
[32m+[m[32m  @OneToMany(mappedBy = "order")[m
[32m+[m[32m  private List<ProductItem> productItems;[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/entities/OrderState.java b/order-service/src/main/java/net/khoudmi/orderservice/entities/OrderState.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e6801fd[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/entities/OrderState.java[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice.entities;[m
[32m+[m
[32m+[m[32mpublic enum OrderState {[m
[32m+[m[32m  PENDING, CONFIRMED, CANCELED, EXECUTED[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/entities/ProductItem.java b/order-service/src/main/java/net/khoudmi/orderservice/entities/ProductItem.java[m
[1mnew file mode 100644[m
[1mindex 0000000..501d4ac[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/entities/ProductItem.java[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice.entities;[m
[32m+[m
[32m+[m[32mimport com.fasterxml.jackson.annotation.JsonProperty;[m
[32m+[m[32mimport jakarta.persistence.*;[m
[32m+[m[32mimport lombok.*;[m
[32m+[m[32mimport net.khoudmi.orderservice.model.Product;[m
[32m+[m
[32m+[m[32m@Entity[m
[32m+[m[32m@NoArgsConstructor @AllArgsConstructor @Getter[m
[32m+[m[32m@Setter @ToString @Builder[m
[32m+[m[32mpublic class ProductItem {[m
[32m+[m[32m  @Id @GeneratedValue(strategy = GenerationType.IDENTITY)[m
[32m+[m[32m  private Long id;[m
[32m+[m[32m  private String productId;[m
[32m+[m[32m  private double price;[m
[32m+[m[32m  private int quantity;[m
[32m+[m[32m  @ManyToOne[m
[32m+[m[32m  @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)[m
[32m+[m[32m  private Order order;[m
[32m+[m[32m  @Transient[m
[32m+[m[32m  private Product product;[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/interceptors/FeignInterceptor.java b/order-service/src/main/java/net/khoudmi/orderservice/interceptors/FeignInterceptor.java[m
[1mnew file mode 100644[m
[1mindex 0000000..1f733f8[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/interceptors/FeignInterceptor.java[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice.interceptors;[m
[32m+[m
[32m+[m[32mimport feign.RequestInterceptor;[m
[32m+[m[32mimport feign.RequestTemplate;[m
[32m+[m[32mimport org.springframework.security.core.context.SecurityContext;[m
[32m+[m[32mimport org.springframework.security.core.Authentication;[m
[32m+[m[32mimport org.springframework.security.core.context.SecurityContextHolder;[m
[32m+[m[32mimport org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken;[m
[32m+[m[32mimport org.springframework.stereotype.Component;[m
[32m+[m
[32m+[m[32m@Component[m
[32m+[m[32mpublic class FeignInterceptor implements RequestInterceptor {[m
[32m+[m[32m  @Override[m
[32m+[m[32m  public void apply(RequestTemplate requestTemplate) {[m
[32m+[m[32m    SecurityContext context = SecurityContextHolder.getContext();[m
[32m+[m[32m    Authentication authentication = context.getAuthentication();[m
[32m+[m[32m    JwtAuthenticationToken jwtAuthenticationToken = (JwtAuthenticationToken) authentication;[m
[32m+[m[32m    String jwtAccessToken = jwtAuthenticationToken.getToken().getTokenValue();[m
[32m+[m[32m    requestTemplate.header("Authorization", "Bearer " + jwtAccessToken);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/model/Product.java b/order-service/src/main/java/net/khoudmi/orderservice/model/Product.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e2a7951[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/model/Product.java[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice.model;[m
[32m+[m[32mimport lombok.*;[m
[32m+[m
[32m+[m[32m@AllArgsConstructor @NoArgsConstructor @Getter[m
[32m+[m[32m@Setter @ToString @Builder[m
[32m+[m[32mpublic class Product {[m
[32m+[m[32m    private String id;[m
[32m+[m[32m    private String name;[m
[32m+[m[32m    private double price;[m
[32m+[m[32m    private int quantity;[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/repositories/OrderRepository.java b/order-service/src/main/java/net/khoudmi/orderservice/repositories/OrderRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..9fd293f[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/repositories/OrderRepository.java[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice.repositories;[m
[32m+[m
[32m+[m[32mimport net.khoudmi.orderservice.entities.Order;[m
[32m+[m[32mimport org.springframework.data.jpa.repository.JpaRepository;[m
[32m+[m
[32m+[m[32mpublic interface OrderRepository extends JpaRepository<Order, String> {[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/repositories/ProductItemRepository.java b/order-service/src/main/java/net/khoudmi/orderservice/repositories/ProductItemRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e1b2698[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/repositories/ProductItemRepository.java[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice.repositories;[m
[32m+[m
[32m+[m[32mimport net.khoudmi.orderservice.entities.ProductItem;[m
[32m+[m[32mimport org.springframework.data.jpa.repository.JpaRepository;[m
[32m+[m
[32m+[m[32mpublic interface ProductItemRepository extends JpaRepository<ProductItem, Long> {[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/restclients/InventoryRestClient.java b/order-service/src/main/java/net/khoudmi/orderservice/restclients/InventoryRestClient.java[m
[1mnew file mode 100644[m
[1mindex 0000000..86dee44[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/restclients/InventoryRestClient.java[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice.restclients;[m
[32m+[m
[32m+[m[32mimport net.khoudmi.orderservice.model.Product;[m
[32m+[m[32mimport org.springframework.cloud.openfeign.FeignClient;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.GetMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m@FeignClient(url = "http://localhost:8087", name = "inventory-service")[m
[32m+[m[32mpublic interface InventoryRestClient {[m
[32m+[m
[32m+[m[32m  @GetMapping("/api/products")[m
[32m+[m[32m  List<Product> getAllProducts();[m
[32m+[m
[32m+[m[32m  @GetMapping("/api/products/{id}")[m
[32m+[m[32m  Product findProductById(@PathVariable String id);[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/security/JwtAuthConverter.java b/order-service/src/main/java/net/khoudmi/orderservice/security/JwtAuthConverter.java[m
[1mnew file mode 100644[m
[1mindex 0000000..51624a1[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/security/JwtAuthConverter.java[m
[36m@@ -0,0 +1,52 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice.security;[m
[32m+[m
[32m+[m[32mimport com.fasterxml.jackson.databind.JavaType;[m
[32m+[m[32mimport com.fasterxml.jackson.databind.type.TypeFactory;[m
[32m+[m[32mimport com.fasterxml.jackson.databind.util.Converter;[m
[32m+[m[32mimport org.springframework.security.authentication.AbstractAuthenticationToken;[m
[32m+[m[32mimport org.springframework.security.core.GrantedAuthority;[m
[32m+[m[32mimport org.springframework.security.core.authority.SimpleGrantedAuthority;[m
[32m+[m[32mimport org.springframework.security.oauth2.jwt.Jwt;[m
[32m+[m[32mimport org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken;[m
[32m+[m[32mimport org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;[m
[32m+[m[32mimport org.springframework.stereotype.Component;[m
[32m+[m
[32m+[m[32mimport java.util.Collection;[m
[32m+[m[32mimport java.util.Map;[m
[32m+[m[32mimport java.util.Set;[m
[32m+[m[32mimport java.util.stream.Collectors;[m
[32m+[m[32mimport java.util.stream.Stream;[m
[32m+[m
[32m+[m[32m@Component[m
[32m+[m[32mpublic class JwtAuthConverter implements Converter<Jwt, AbstractAuthenticationToken>, org.springframework.core.convert.converter.Converter<Jwt, AbstractAuthenticationToken> {[m
[32m+[m[32m    private final JwtGrantedAuthoritiesConverter jwtGrantedAuthoritiesConverter = new JwtGrantedAuthoritiesConverter();[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public AbstractAuthenticationToken convert(Jwt jwt) {[m
[32m+[m[32m        Collection<GrantedAuthority> authorities = Stream.concat([m
[32m+[m[32m                jwtGrantedAuthoritiesConverter.convert(jwt).stream(),[m
[32m+[m[32m                extractResourceRoles(jwt).stream()[m
[32m+[m[32m        ).collect(Collectors.toSet());[m
[32m+[m[32m        return new JwtAuthenticationToken(jwt, authorities, jwt.getClaim("preferred_username"));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private Collection<GrantedAuthority> extractResourceRoles(Jwt jwt) {[m
[32m+[m[32m        Map<String, Object> realmAccess;[m
[32m+[m[32m        Collection<String> roles;[m
[32m+[m[32m        if(jwt.getClaim("realm_access")==null){[m
[32m+[m[32m            return Set.of();[m
[32m+[m[32m        }[m
[32m+[m[32m        realmAccess = jwt.getClaim("realm_access");[m
[32m+[m[32m        roles = (Collection<String>) realmAccess.get("roles");[m
[32m+[m[32m        return roles.stream().map(role->new SimpleGrantedAuthority(role)).collect(Collectors.toSet());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public JavaType getInputType(TypeFactory typeFactory) {[m
[32m+[m[32m        return null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public JavaType getOutputType(TypeFactory typeFactory) {[m
[32m+[m[32m        return null;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/security/SecurityConfig.java b/order-service/src/main/java/net/khoudmi/orderservice/security/SecurityConfig.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2829bf3[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/security/SecurityConfig.java[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice.security;[m
[32m+[m
[32m+[m[32mimport org.springframework.context.annotation.Bean;[m
[32m+[m[32mimport org.springframework.context.annotation.Configuration;[m
[32m+[m[32mimport org.springframework.security.config.Customizer;[m
[32m+[m[32mimport org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;[m
[32m+[m[32mimport org.springframework.security.config.annotation.web.builders.HttpSecurity;[m
[32m+[m[32mimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;[m
[32m+[m[32mimport org.springframework.security.config.http.SessionCreationPolicy;[m
[32m+[m[32mimport org.springframework.security.web.SecurityFilterChain;[m
[32m+[m[32mimport org.springframework.web.cors.CorsConfiguration;[m
[32m+[m[32mimport org.springframework.web.cors.CorsConfigurationSource;[m
[32m+[m[32mimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;[m
[32m+[m
[32m+[m[32mimport java.util.Arrays;[m
[32m+[m
[32m+[m[32m@Configuration[m
[32m+[m[32m@EnableWebSecurity[m
[32m+[m[32m@EnableMethodSecurity(prePostEnabled = true)[m
[32m+[m[32mpublic class SecurityConfig {[m
[32m+[m[32m    private JwtAuthConverter jwtAuthConverter;[m
[32m+[m
[32m+[m[32m    public SecurityConfig(JwtAuthConverter jwtAuthConverter) {[m
[32m+[m[32m        this.jwtAuthConverter = jwtAuthConverter;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Bean[m
[32m+[m[32m    public SecurityFilterChain securityFilterChain([m
[32m+[m[32m            HttpSecurity httpSecurity)[m
[32m+[m[32m            throws Exception {[m
[32m+[m[32m        return httpSecurity[m
[32m+[m[32m                .cors(Customizer.withDefaults())[m
[32m+[m[32m                .sessionManagement(sm->sm.sessionCreationPolicy([m
[32m+[m[32m                        SessionCreationPolicy.STATELESS))[m
[32m+[m[32m                .csrf(csrf->csrf.disable())[m
[32m+[m[32m                .headers(h->h.frameOptions(fo->fo.disable()))[m
[32m+[m[32m                .authorizeHttpRequests([m
[32m+[m[32m                        ar->ar.requestMatchers("/h2-console/**",[m
[32m+[m[32m                            "/swagger-ui.html",[m
[32m+[m[32m                            "/v3/**",[m
[32m+[m[32m                            "/swagger-ui/**")[m
[32m+[m[32m                          .permitAll())[m
[32m+[m[32m//                .authorizeHttpRequests(ar->ar.requestMatchers("/api/products/**").hasAuthority("ADMIN"))[m
[32m+[m[32m                .authorizeHttpRequests([m
[32m+[m[32m                        ar->ar.anyRequest().authenticated())[m
[32m+[m[32m                .oauth2ResourceServer(o2->o2.jwt(jwt->jwt.jwtAuthenticationConverter(jwtAuthConverter)))[m
[32m+[m[32m                .build();[m
[32m+[m[32m    }[m
[32m+[m[32m    @Bean[m
[32m+[m[32m    CorsConfigurationSource corsConfigurationSource(){[m
[32m+[m[32m        CorsConfiguration configuration = new CorsConfiguration();[m
[32m+[m[32m        configuration.setAllowedOrigins(Arrays.asList("*"));[m
[32m+[m[32m        configuration.setAllowedMethods(Arrays.asList("*"));[m
[32m+[m[32m        configuration.setAllowedHeaders(Arrays.asList("*"));[m
[32m+[m[32m        configuration.setExposedHeaders(Arrays.asList("*"));[m
[32m+[m[32m        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();[m
[32m+[m[32m        source.registerCorsConfiguration("/**", configuration);[m
[32m+[m[32m        return source;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/java/net/khoudmi/orderservice/web/OrdersRestControllers.java b/order-service/src/main/java/net/khoudmi/orderservice/web/OrdersRestControllers.java[m
[1mnew file mode 100644[m
[1mindex 0000000..edebac4[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/java/net/khoudmi/orderservice/web/OrdersRestControllers.java[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice.web;[m
[32m+[m
[32m+[m[32mimport net.khoudmi.orderservice.entities.Order;[m
[32m+[m[32mimport net.khoudmi.orderservice.repositories.OrderRepository;[m
[32m+[m[32mimport net.khoudmi.orderservice.restclients.InventoryRestClient;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.GetMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RestController;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m@RestController[m
[32m+[m[32m@RequestMapping("/api")[m
[32m+[m[32mpublic class OrdersRestControllers {[m
[32m+[m[32m  private OrderRepository orderRepository;[m
[32m+[m[32m  private InventoryRestClient inventoryRestClient;[m
[32m+[m
[32m+[m[32m  public OrdersRestControllers(OrderRepository orderRepository, InventoryRestClient inventoryRestClient) {[m
[32m+[m[32m    this.orderRepository = orderRepository;[m
[32m+[m[32m    this.inventoryRestClient = inventoryRestClient;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  @GetMapping("/orders")[m
[32m+[m[32m  private List<Order> findAllOrders(){[m
[32m+[m[32m    List<Order> allOrders = orderRepository.findAll();[m
[32m+[m[32m    allOrders.forEach(o->{[m
[32m+[m[32m      o.getProductItems().forEach(pi->{[m
[32m+[m[32m        pi.setProduct(inventoryRestClient.findProductById(pi.getProductId()));[m
[32m+[m[32m      });[m
[32m+[m[32m    });[m
[32m+[m[32m    return allOrders;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  @GetMapping("/orders/{id}")[m
[32m+[m[32m  private Order findOrderById(@PathVariable String id){[m
[32m+[m[32m    Order order = orderRepository.findById(id).get();[m
[32m+[m[32m    order.getProductItems().forEach(pi->{[m
[32m+[m[32m      pi.setProduct(inventoryRestClient.findProductById(pi.getProductId()));[m
[32m+[m[32m    });[m
[32m+[m[32m    return order;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/order-service/src/main/resources/application.properties b/order-service/src/main/resources/application.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..4af4d25[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/main/resources/application.properties[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mspring.application.name=order-service[m
[32m+[m[32mserver.port=8088[m
[32m+[m
[32m+[m[32mspring.datasource.url=jdbc:h2:mem:orders-db[m
[32m+[m[32mspring.h2.console.enabled=true[m
[32m+[m
[32m+[m[32mspring.cloud.config.enabled=false[m
[32m+[m[32mspring.cloud.discovery.enabled=false[m
[32m+[m
[32m+[m[32mspring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/bdcc-realm[m
[32m+[m[32mspring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/bdcc-realm/protocol/openid-connect/certs[m
[32m+[m
[1mdiff --git a/order-service/src/test/java/net/khoudmi/orderservice/OrderServiceApplicationTests.java b/order-service/src/test/java/net/khoudmi/orderservice/OrderServiceApplicationTests.java[m
[1mnew file mode 100644[m
[1mindex 0000000..5f7695d[m
[1m--- /dev/null[m
[1m+++ b/order-service/src/test/java/net/khoudmi/orderservice/OrderServiceApplicationTests.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage net.khoudmi.orderservice;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.api.Test;[m
[32m+[m[32mimport org.springframework.boot.test.context.SpringBootTest;[m
[32m+[m
[32m+[m[32m@SpringBootTest[m
[32m+[m[32mclass OrderServiceApplicationTests {[m
[32m+[m
[32m+[m[32m  @Test[m
[32m+[m[32m  void contextLoads() {[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/pom.xml b/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..8b18e14[m
[1m--- /dev/null[m
[1m+++ b/pom.xml[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0"[m
[32m+[m[32m         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m[32m         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m[32m    <modelVersion>4.0.0</modelVersion>[m
[32m+[m
[32m+[m[32m    <groupId>net.khoudmi</groupId>[m
[32m+[m[32m    <artifactId>ecom-bdcc-app</artifactId>[m
[32m+[m[32m    <version>1.0-SNAPSHOT</version>[m
[32m+[m
[32m+[m[32m    <properties>[m
[32m+[m[32m        <maven.compiler.source>17</maven.compiler.source>[m
[32m+[m[32m        <maven.compiler.target>17</maven.compiler.target>[m
[32m+[m[32m        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>[m
[32m+[m[32m    </properties>[m
[32m+[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/src/app/app-routing.module.ts b/src/app/app-routing.module.ts[m
[1mindex 5c5280f..e23c613 100644[m
[1m--- a/src/app/app-routing.module.ts[m
[1m+++ b/src/app/app-routing.module.ts[m
[36m@@ -3,18 +3,12 @@[m [mimport { RouterModule, Routes } from '@angular/router';[m
 import {ProductsComponent} from "./ui/products/products.component";[m
 import {CustomersComponent} from "./ui/customers/customers.component";[m
 import {AuthGuard} from "./guards/auth.guard";[m
[31m-import {OrdersComponent} from "./ui/orders/orders.component";[m
[31m-import {OrderDetailsComponent} from "./ui/order-details/order-details.component";[m
 [m
 const routes: Routes = [[m
   {path : "products", component : ProductsComponent,[m
     canActivate : [AuthGuard], data : {roles : ['ADMIN']}},[m
   {path : "customers", component : CustomersComponent,[m
     canActivate : [AuthGuard], data : {roles : ['USER']}},[m
[31m-  {path : "orders", component : OrdersComponent,[m
[31m-    canActivate : [AuthGuard], data : {roles : ['USER']}},[m
[31m-  {path : "order-details/:id", component : OrderDetailsComponent,[m
[31m-    canActivate : [AuthGuard], data : {roles : ['USER']}},[m
 ];[m
 [m
 @NgModule({[m
[1mdiff --git a/src/app/app.component.html b/src/app/app.component.html[m
[1mindex 23c82d2..393496a 100644[m
[1m--- a/src/app/app.component.html[m
[1m+++ b/src/app/app.component.html[m
[36m@@ -15,9 +15,6 @@[m
         <li class="nav-item">[m
           <a class="nav-link" routerLink="/customers">Customers</a>[m
         </li>[m
[31m-        <li class="nav-item">[m
[31m-          <a class="nav-link" routerLink="/orders">Orders</a>[m
[31m-        </li>[m
         <li class="nav-item dropdown">[m
           <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">[m
             Dropdown[m
[1mdiff --git a/src/app/app.module.ts b/src/app/app.module.ts[m
[1mindex a10fc0d..1e2bd95 100644[m
[1m--- a/src/app/app.module.ts[m
[1m+++ b/src/app/app.module.ts[m
[36m@@ -7,8 +7,6 @@[m [mimport { ProductsComponent } from './ui/products/products.component';[m
 import { CustomersComponent } from './ui/customers/customers.component';[m
 import {HttpClientModule, provideHttpClient, withInterceptorsFromDi} from "@angular/common/http";[m
 import {KeycloakAngularModule, KeycloakService} from "keycloak-angular";[m
[31m-import { OrdersComponent } from './ui/orders/orders.component';[m
[31m-import { OrderDetailsComponent } from './ui/order-details/order-details.component';[m
 [m
 function initializeKeycloak(keycloak: KeycloakService) {[m
   return () =>[m
[36m@@ -30,9 +28,7 @@[m [mfunction initializeKeycloak(keycloak: KeycloakService) {[m
   declarations: [[m
         AppComponent,[m
         ProductsComponent,[m
[31m-        CustomersComponent,[m
[31m-        OrdersComponent,[m
[31m-        OrderDetailsComponent[m
[32m+[m[32m        CustomersComponent[m
   ],[m
   bootstrap: [AppComponent],[m
   imports: [[m
[1mdiff --git a/src/app/ui/order-details/order-details.component.css b/src/app/ui/order-details/order-details.component.css[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/src/app/ui/order-details/order-details.component.html b/src/app/ui/order-details/order-details.component.html[m
[1mdeleted file mode 100644[m
[1mindex 2819437..0000000[m
[1m--- a/src/app/ui/order-details/order-details.component.html[m
[1m+++ /dev/null[m
[36m@@ -1,31 +0,0 @@[m
[31m-<div class="p-3">[m
[31m-  <div class="card" *ngIf="orderDetails">[m
[31m-    <div class="card-header">Order Details :- {{orderId}} </div>[m
[31m-    <div class="card-body">[m
[31m-      <ul class="list-group">[m
[31m-        <li class="list-group-item">Date : {{orderDetails.date | date : 'dd/MM/yyyy'}}</li>[m
[31m-        <li class="list-group-item">State : {{orderDetails.state}}</li>[m
[31m-      </ul>[m
[31m-      <table class="table">[m
[31m-        <thead>[m
[31m-          <tr>[m
[31m-            <th class="bg bg-dark text-white">ID</th> <th class="bg bg-dark text-white">Product Name</th> <th class="bg bg-dark text-white">Price</th> <th class="bg bg-dark text-white">Quantity</th> <th class="bg bg-dark text-white">Amount</th>[m
[31m-          </tr>[m
[31m-        </thead>[m
[31m-        <tbody>[m
[31m-          <tr *ngFor="let pi of orderDetails.productItems">[m
[31m-            <td>{{pi.id}}</td>[m
[31m-            <td>{{pi.product.name}}</td>[m
[31m-            <td>{{pi.price | number:'0.2-2'}}</td>[m
[31m-            <td>{{pi.quantity}}</td>[m
[31m-            <td>{{pi.quantity * pi.price | number:'0.2-2'}}</td>[m
[31m-          </tr>[m
[31m-        <tr>[m
[31m-          <td colspan="4">Total</td>[m
[31m-          <td>{{getTotal(orderDetails) | number:'0.2-2'}}</td>[m
[31m-        </tr>[m
[31m-        </tbody>[m
[31m-      </table>[m
[31m-    </div>[m
[31m-  </div>[m
[31m-</div>[m
[1mdiff --git a/src/app/ui/order-details/order-details.component.spec.ts b/src/app/ui/order-details/order-details.component.spec.ts[m
[1mdeleted file mode 100644[m
[1mindex 325a24e..0000000[m
[1m--- a/src/app/ui/order-details/order-details.component.spec.ts[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-import { ComponentFixture, TestBed } from '@angular/core/testing';[m
[31m-[m
[31m-import { OrderDetailsComponent } from './order-details.component';[m
[31m-[m
[31m-describe('OrderDetailsComponent', () => {[m
[31m-  let component: OrderDetailsComponent;[m
[31m-  let fixture: ComponentFixture<OrderDetailsComponent>;[m
[31m-[m
[31m-  beforeEach(async () => {[m
[31m-    await TestBed.configureTestingModule({[m
[31m-      declarations: [OrderDetailsComponent][m
[31m-    })[m
[31m-    .compileComponents();[m
[31m-[m
[31m-    fixture = TestBed.createComponent(OrderDetailsComponent);[m
[31m-    component = fixture.componentInstance;[m
[31m-    fixture.detectChanges();[m
[31m-  });[m
[31m-[m
[31m-  it('should create', () => {[m
[31m-    expect(component).toBeTruthy();[m
[31m-  });[m
[31m-});[m
[1mdiff --git a/src/app/ui/order-details/order-details.component.ts b/src/app/ui/order-details/order-details.component.ts[m
[1mdeleted file mode 100644[m
[1mindex 16da28b..0000000[m
[1m--- a/src/app/ui/order-details/order-details.component.ts[m
[1m+++ /dev/null[m
[36m@@ -1,36 +0,0 @@[m
[31m-import {Component, OnInit} from '@angular/core';[m
[31m-import {ActivatedRoute} from "@angular/router";[m
[31m-import {HttpClient} from "@angular/common/http";[m
[31m-[m
[31m-@Component({[m
[31m-  selector: 'app-order-details',[m
[31m-  templateUrl: './order-details.component.html',[m
[31m-  styleUrl: './order-details.component.css'[m
[31m-})[m
[31m-export class OrderDetailsComponent implements OnInit{[m
[31m-  orderId! : string;[m
[31m-  orderDetails : any;[m
[31m-  constructor(private route : ActivatedRoute,[m
[31m-              private http : HttpClient) {[m
[31m-    this.orderId = this.route.snapshot.params['id'];[m
[31m-  }[m
[31m-[m
[31m-    ngOnInit(): void {[m
[31m-      this.http.get("http://localhost:8088/api/orders/"+this.orderId).subscribe({[m
[31m-        next : order => {[m
[31m-          this.orderDetails=order;[m
[31m-        },[m
[31m-        error : error => {[m
[31m-          console.log(error);[m
[31m-        }[m
[31m-      })[m
[31m-    }[m
[31m-[m
[31m-  getTotal(orderDetails: any) {[m
[31m-    let total : number = 0;[m
[31m-    for (let pi of orderDetails.productItems) {[m
[31m-      total = total + (pi.price * pi.quantity);[m
[31m-    }[m
[31m-    return total;[m
[31m-  }[m
[31m-}[m
[1mdiff --git a/src/app/ui/orders/orders.component.css b/src/app/ui/orders/orders.component.css[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/src/app/ui/orders/orders.component.html b/src/app/ui/orders/orders.component.html[m
[1mdeleted file mode 100644[m
[1mindex 4adea4d..0000000[m
[1m--- a/src/app/ui/orders/orders.component.html[m
[1m+++ /dev/null[m
[36m@@ -1,26 +0,0 @@[m
[31m-<div class="p-3">[m
[31m-  <div class="card">[m
[31m-    <div class="card-header">Orders</div>[m
[31m-    <div class="card-body">[m
[31m-      <h2>Orders</h2>[m
[31m-      <table class="table">[m
[31m-        <thead>[m
[31m-        <tr>[m
[31m-          <th>ID</th> <th>Date</th> <th>State</th> <th>Products Count</th>[m
[31m-        </tr>[m
[31m-        </thead>[m
[31m-        <tbody>[m
[31m-        <tr *ngFor="let o of orders">[m
[31m-          <td>{{o.id}}</td>[m
[31m-          <td>{{o.date}}</td>[m
[31m-          <td>{{o.state}}</td>[m
[31m-          <td>{{o.productItems.length}}</td>[m
[31m-          <td>[m
[31m-            <button class="btn btn-success" (click)="getOrderDetails(o)">Order Details</button>[m
[31m-          </td>[m
[31m-        </tr>[m
[31m-        </tbody>[m
[31m-      </table>[m
[31m-    </div>[m
[31m-  </div>[m
[31m-</div>[m
[1mdiff --git a/src/app/ui/orders/orders.component.spec.ts b/src/app/ui/orders/orders.component.spec.ts[m
[1mdeleted file mode 100644[m
[1mindex 4701c22..0000000[m
[1m--- a/src/app/ui/orders/orders.component.spec.ts[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-import { ComponentFixture, TestBed } from '@angular/core/testing';[m
[31m-[m
[31m-import { OrdersComponent } from './orders.component';[m
[31m-[m
[31m-describe('OrdersComponent', () => {[m
[31m-  let component: OrdersComponent;[m
[31m-  let fixture: ComponentFixture<OrdersComponent>;[m
[31m-[m
[31m-  beforeEach(async () => {[m
[31m-    await TestBed.configureTestingModule({[m
[31m-      declarations: [OrdersComponent][m
[31m-    })[m
[31m-    .compileComponents();[m
[31m-[m
[31m-    fixture = TestBed.createComponent(OrdersComponent);[m
[31m-    component = fixture.componentInstance;[m
[31m-    fixture.detectChanges();[m
[31m-  });[m
[31m-[m
[31m-  it('should create', () => {[m
[31m-    expect(component).toBeTruthy();[m
[31m-  });[m
[31m-});[m
[1mdiff --git a/src/app/ui/orders/orders.component.ts b/src/app/ui/orders/orders.component.ts[m
[1mdeleted file mode 100644[m
[1mindex 74a3552..0000000[m
[1m--- a/src/app/ui/orders/orders.component.ts[m
[1m+++ /dev/null[m
[36m@@ -1,31 +0,0 @@[m
[31m-import {Component, OnInit} from '@angular/core';[m
[31m-import {HttpClient} from "@angular/common/http";[m
[31m-import {Router} from "@angular/router";[m
[31m-[m
[31m-@Component({[m
[31m-  selector: 'app-orders',[m
[31m-  templateUrl: './orders.component.html',[m
[31m-  styleUrl: './orders.component.css'[m
[31m-})[m
[31m-export class OrdersComponent implements OnInit {[m
[31m-  public orders : any;[m
[31m-[m
[31m-  constructor(private http : HttpClient,[m
[31m-              private router : Router) {[m
[31m-  }[m
[31m-    ngOnInit(): void {[m
[31m-      this.http.get("http://localhost:8088/api/orders").subscribe({[m
[31m-        next : orders => {[m
[31m-          this.orders = orders;[m
[31m-        },[m
[31m-        error : error => {[m
[31m-          console.log(error);[m
[31m-        }[m
[31m-      })[m
[31m-    }[m
[31m-[m
[31m-  getOrderDetails(o:any) {[m
[31m-    this.router.navigateByUrl("order-details/"+o.id);[m
[31m-[m
[31m-  }[m
[31m-}[m
[1mdiff --git a/src/main/java/net/khoudmi/Main.java b/src/main/java/net/khoudmi/Main.java[m
[1mnew file mode 100644[m
[1mindex 0000000..07029b7[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/net/khoudmi/Main.java[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mpackage net.khoudmi;[m
[32m+[m
[32m+[m[32mpublic class Main {[m
[32m+[m[32m    public static void main(String[] args) {[m
[32m+[m[32m        System.out.println("Hello world!");[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
